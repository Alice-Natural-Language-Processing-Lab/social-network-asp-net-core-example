@using SocialNetwork.Web.Constants
@using SocialNetwork.Web.ViewModels
@model SocialNetwork.Web.ViewModels.HomeViewModel

@{
    ViewData["Title"] = "SocialNetwork";
    ViewData["ActivePage"] = "Home/Index";
}

<div class="col-md-offset-2 col-md-7">
    <form id="new-post-form">
        <div class="form-group">
            <label class="control-label" for="form-text">Create new post</label>
            <textarea class="form-control" id="form-text" name="text"></textarea>
        </div>
        <div class="form-group">
            <button class="btn btn-primary btn-submit" name="submit" type="button">Post</button>
        </div>
    </form>

    <br />
    <br />
    <br />

    <div id="posts-list">
        @foreach (var post in Model.Posts)
        {
            @Html.Partial("_Post", post)
        }
    </div>

</div>

@section scripts {
    <script src="~/lib/signalr.js"></script>

    <script>

        var connection = new signalR.HubConnection('/posts');
        var postsCount = $('.post').length
        
        connection.on('@PostsEvents.PostPublished', function (postHtml){
            var id = $(postHtml).attr('id')
            $('#posts-list').prepend(postHtml)
            setHandlersForPost($('#' + id))
            postsCount++;
        })

        connection.on('@PostsEvents.PostDeleted', function (postId){
            var postHtml = $('#posts-list ' + ' #post-' + postId)
            postHtml.remove()
            postsCount--;
        })

        connection.on('@PostsEvents.PostChanged', function (newPostHtml){
            var postId = $(newPostHtml).attr('id')
            var oldPostHtml = $('#' + postId)
            oldPostHtml.replaceWith(newPostHtml)
            setHandlersForPost($('#' + postId))
        })

        connection.start()

        function updatePost(data) {
            $.ajax({
                url: '@Url.Action("UpdatePost")',
                type: 'POST',
                data: data,
                error: function(err) {
                    console.log(err)
                }
            })
        }
        
        var userEventHandlers = {
            formSubmit: function () {

                var $form = $('#new-post-form')
                var $textArea = $form.find('#form-text')
                var postText = $textArea.val()
                if (postText == '' || postText == null)
                    return;

                $.ajax({
                    url: '@Url.Action("CreatePost")',
                    type: 'POST',
                    data: {
                        postText: postText
                    },
                    success: function() {
                        $textArea.val('')
                    },
                    error: function(err) {
                        console.error(err)
                    }
                })
            },
            delete: function(e) {
                var $postRoot = $(e.currentTarget).parents().eq(3)
                var postId = $postRoot.attr('id').replace('post-', '')
                $.ajax({
                    url: '@Url.Action("DeletePost")',
                    type: 'POST',
                    data: {
                        postId: postId
                    },
                    error: function(err) {
                        console.error(err)
                    }
                })
            },
            edit: function (e) {

                var $postRoot = $(e.currentTarget).parents().eq(3)
                var postId = $postRoot.attr('id').replace('post-', '')

                // replaceParagraphWithTextArea
                var $postParagraph = $postRoot.find('.post-text')
                var postParagraphWidth = $postParagraph.css('width')
                var postText = $postParagraph.text();
                $postParagraph.replaceWith('<textarea>' + postText + "</textarea>")
                var $postTextArea = $postRoot.find('textarea')
                $postTextArea.css('width', postParagraphWidth)

                // setEditingButtons
                var $list = $postRoot.find('ul');
                $list.find('.control-btn').remove()

                var doneBtnHtml =
                    '<li class="control-btn control-btn-done-editing">' + 
                        '<span>' + 
                            '<button class="btn btn-primary">Done</button>' + 
                        '</span>' + 
                    '</li>';

                $list.append(doneBtnHtml)
                var $doneBtn = $list.find('.control-btn-done-editing');
                $doneBtn.click(function () {
                    var newText = $postTextArea.val()
                    if (newText == "")
                        return;
                    updatePost({
                        id: postId,
                        text: newText
                    })
                })
            },
            like: function (e) {
                var $postRoot = $(e.currentTarget).parents().eq(3)
                var postId = $postRoot.attr('id').replace('post-', '')
                console.log("oćeš lajkat" + postId)
                updatePost({
                    id: postId,
                    addLike: true
                })
            },
            disLike: function (e) {
                var $postRoot = $(e.currentTarget).parents().eq(3)
                var postId = $postRoot.attr('id').replace('post-', '')
                console.log("oćeš dislajkat" + postId)
                updatePost({
                    id: postId,
                    addDislike: true
                })
            },
            reachedPageBottom: function () {
                $.ajax({
                    url: '@Url.Action("LoadPosts")',
                    type: 'POST',
                    data: {
                        count: 5,
                        skip: postsCount,
                        propsToInclude : ["Author"]
                    },
                    success: function(data) {
                        data.forEach(function(postHtml) {
                            var id = $(postHtml).attr('id')
                            $('#posts-list').append(postHtml)
                            setHandlersForPost($('#' + id))
                            postsCount++;
                        })
                    },
                    error: function(err) {
                        console.error(err)
                    }
                })
            }
        }

        var allPosts = $('.post')
        allPosts.each(function(i) {
            var $post = $(allPosts[i])
            setHandlersForPost($post)
        })
        $("#new-post-form .btn-submit").click(userEventHandlers.formSubmit)
        onScrollToBottom(userEventHandlers.reachedPageBottom)

        function setHandlersForPost($post) {
            $post.find('.control-btn-delete').click(userEventHandlers.delete)
            $post.find('.control-btn-edit').click(userEventHandlers.edit)
            $post.find('.control-btn-like').click(userEventHandlers.like)
            $post.find('.control-btn-dislike').click(userEventHandlers.disLike)
        }

    </script>

}